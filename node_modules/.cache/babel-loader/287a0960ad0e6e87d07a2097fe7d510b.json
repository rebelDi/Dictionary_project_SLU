{"ast":null,"code":"var _jsxFileName = \"/Users/cihanozluk/my-workspace/dictionary-project/src/components/Definitions/Definitions.js\";\nimport React from \"react\";\nimport \"./Definitions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Definitions = (meanings, word, language, poSpeech) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meanings\",\n    children: meanings.meanings.map(item => item.meanings.map(i => i.partOfSpeech === poSpeech ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"subTitle\",\n      children: poSpeech\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this) : i.definitions.map(def => /*#__PURE__*/_jsxDEV(\"b\", {\n      children: def.partOfSpeech\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 38\n    }, this))))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Definitions;\nexport default Definitions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Definitions\");","map":{"version":3,"sources":["/Users/cihanozluk/my-workspace/dictionary-project/src/components/Definitions/Definitions.js"],"names":["React","Definitions","meanings","word","language","poSpeech","map","item","i","partOfSpeech","definitions","def"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,QAA3B,KAAwC;AAC1D,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cAEFH,QAAQ,CAACA,QAAT,CAAkBI,GAAlB,CAAuBC,IAAD,IACrBA,IAAI,CAACL,QAAL,CAAcI,GAAd,CAAmBE,CAAD,IAClBA,CAAC,CAACC,YAAF,KAAmBJ,QAAnB,gBACI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,gBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,GAGEG,CAAC,CAACE,WAAF,CAAcJ,GAAd,CAAmBK,GAAD,iBAAS;AAAA,gBAAIA,GAAG,CAACF;AAAR;AAAA;AAAA;AAAA;AAAA,YAA3B,CAJF,CADD;AAFE;AAAA;AAAA;AAAA;AAAA,UAAP;AAYD,CAbD;;KAAMR,W;AAcN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport \"./Definitions.css\";\n\nconst Definitions = (meanings, word, language, poSpeech) => {\n  return <div className=\"meanings\">\n      \n      {meanings.meanings.map((item) =>\n        item.meanings.map((i) =>\n        i.partOfSpeech === poSpeech ? (\n            <span className=\"subTitle\">{poSpeech}</span>\n          ) :\n          i.definitions.map((def) => <b>{def.partOfSpeech}</b>)\n        )\n      )}\n      \n    </div>;\n};\nexport default Definitions;\n"]},"metadata":{},"sourceType":"module"}